######################################################################################
#  Description
######################################################################################
Description: 'Operations: Alert topic'

######################################################################################
#  Parameter
######################################################################################
Parameters:
  EnvironmentName:
      Description: An environment name that will be prefixed to resource names (do not change)
      Type: String
      Default: UngerwAlerting

  Email:
    Description: 'Optional email address that will receive alerts'
    Type: String
    Default: ''

  HttpEndpoint:
    Description: 'Optional HTTP endpoint that will receive alerts via POST requests'
    Type: String
    Default: ''

  HttpsEndpoint:
    Description: 'Optional HTTPS endpoint that will receive alerts via POST requests (can be a marbot.io endpoint)'
    Type: String
    Default: ''

  FallbackEmail:
    Description: 'Optional email address that will receive alerts if alerts can not be delivered'
    Type: String
    Default: ''

######################################################################################
#  Metadata
######################################################################################
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Base Alert Configuration'
      Parameters:
      - EnvironmentName
      - Email
      - HttpEndpoint
      - HttpsEndpoint
    - Label:
        default: 'Fallback Parameters'
      Parameters:
      - FallbackEmail

######################################################################################
#  Conditions
######################################################################################
Conditions:
  HasEmail: !Not [!Equals [!Ref Email, '']]
  HasHttpEndpoint: !Not [!Equals [!Ref HttpEndpoint, '']]
  HasHttpsEndpoint: !Not [!Equals [!Ref HttpsEndpoint, '']]
  HasFallbackEmail: !Not [!Equals [!Ref FallbackEmail, '']]

######################################################################################
#  Resources
######################################################################################
Resources:
  Topic:
    Type: 'AWS::SNS::Topic'
    Properties: {}

  TopicPolicy:
    Type: 'AWS::SNS::TopicPolicy'
    Properties:
      PolicyDocument:
        Id: Id1
        Version: '2012-10-17'
        Statement:
        - Sid: Sid1
          Effect: Allow
          Principal:
            Service:
            - 'events.amazonaws.com' # Allow CloudWatch Events
            - 'budgets.amazonaws.com' # Allow Budget Notifications
            - 'rds.amazonaws.com' # Allow RDS Events
            - 's3.amazonaws.com' # Allow S3 Event Notifications
          Action: 'sns:Publish'
          Resource: !Ref Topic
        - Sid: Sid2
          Effect: Allow
          Principal:
            AWS: '*' # Allow CloudWatch Alarms, ElastiCache Notifications, Elastic Beanstalk Notifications, Auto Scaling Notification
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:SourceOwner': !Ref 'AWS::AccountId'
        - Sid: Sid3
          Effect: Allow
          Principal:
            Service: 'ses.amazonaws.com' # Allow SES Notifications & Events
          Action: 'sns:Publish'
          Resource: !Ref Topic
          Condition:
            StringEquals:
              'AWS:Referer': !Ref 'AWS::AccountId'
      Topics:
      - !Ref Topic

  FallbackTopic:
    Type: 'AWS::SNS::Topic'
    Properties: {}


  EmailSubscription:
    Condition: HasEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref Email
      Protocol: email
      TopicArn: !Ref Topic

  HttpEndpointSubscription:
    Condition: HasHttpEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref HttpEndpoint
      Protocol: http
      TopicArn: !Ref Topic

  HttpsEndpointSubscription:
    Condition: HasHttpsEndpoint
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref HttpsEndpoint
      Protocol: https
      TopicArn: !Ref Topic

  FallbackEmailSubscription:
    Condition: HasFallbackEmail
    Type: 'AWS::SNS::Subscription'
    Properties:
      Endpoint: !Ref FallbackEmail
      Protocol: email
      TopicArn: !Ref FallbackTopic

######################################################################################
#  Resources
######################################################################################      
Outputs:
  StackName:
    Description: 'Stack name'
    Value: !Sub '${AWS::StackName}'
  TopicARN:
    Description: 'The ARN of the alert topic.'
    Value: !Ref Topic
    Export:
      Name: !Sub '${AWS::StackName}-TopicARN'